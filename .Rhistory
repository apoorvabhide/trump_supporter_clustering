AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
batcompbypos <- ipl_df %>% filter(BatTeam == team) %>% group_by(position,WinFlag) %>%
dplyr::summarise(AvgRuns = sum(Runs)/length(unique(MatchID)),
AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
batcompbypos <- ipl_df %>% filter(BatTeam == team) %>% group_by(position,WinFlag) %>%
dplyr::summarise(AvgRuns = sum(BaRuns)/length(unique(MatchID)),
AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
View(batcompbypos)
library(reshape2)
batcompbypos <- melt(batcompbypos,id.vars = "position")
batcompbypos <- dcast(batcompbypos,position ~ .)
View(batcompbypos)
batcompbypos <- ipl_df %>% filter(BatTeam == team) %>% group_by(position,WinFlag) %>%
dplyr::summarise(AvgRuns = sum(BaRuns)/length(unique(MatchID)),
AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
batcompbypos <- melt(batcompbypos,id.vars = "position")
batcompbypos <- dcast(batcompbypos)
batcompbypos <- cast(batcompbypos)
batcompbypos <- acast(batcompbypos)
View(m)
View(squads)
get_all_ipl_matchups <- function(ipl_df,squad_df,teama,teamb)
{
batting_matchups <- ipl %>% filter(striker %in% squad_df$Player[squad_df$Team == teama] &
bowler %in% squad_df$Player[squad_df$Team == teamb]) %>% group_by(striker,bowler) %>%
dplyr::summarise(Runs = sum(BaRuns),
BallsFaced = sum(IsBallFaced),
Outs = sum(IsBowlWicket),
SR = sum(BaRuns)*100/sum(IsBallFaced),
DotPC = sum(IsBatDotBall)/sum(IsBallFaced),
BoundaryPC = sum(IsBoundary)/sum(IsBallFaced))
bowling_matchups <- ipl %>% filter(striker %in% squad_df$Player[squad_df$Team == teamb] &
bowler %in% squad_df$Player[squad_df$Team == teama]) %>% group_by(striker,bowler) %>%
dplyr::summarise(Runs = sum(BaRuns),
BallsBowled = sum(IsBallBowled),
Outs = sum(IsBowlWicket),
Economy = sum(BaRuns)*6/sum(IsBallBowled),
DotPC = sum(IsBowlDotBall)/sum(IsBallBowled),
BoundaryPC = sum(IsBoundary)/sum(IsBallBowled))
matchups <- list(batting = batting_matchups, bowling = bowling_matchups)
return(matchups)
}
m <- get_all_ipl_matchups(ipl_df = ipl,squad_df = squads,teama = "Chennai Super Kings",teamb = "Kings XI Punjab")
View(m)
ipl_df <- ipl_df %>% mutate(WinFlag = ifelse(Winner == team,"Won","Lost"))
batcompbypos <- ipl_df %>% filter(BatTeam == team) %>% group_by(position,WinFlag) %>%
dplyr::summarise(AvgRuns = sum(BaRuns)/length(unique(MatchID)),
AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
View(batcompbypos)
batcompbypos <- ipl_df %>% filter(BatTeam == team) %>% group_by(position,WinFlag) %>%
dplyr::summarise(AvgRuns = sum(BaRuns)/length(unique(MatchID)),
AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)*100/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
batcompbypos <- melt(batcompbypos,id.vars = "position")
View(batcompbypos)
batcompbypos <- ipl_df %>% filter(BatTeam == team) %>% group_by(position,WinFlag) %>%
dplyr::summarise(AvgRuns = sum(BaRuns)/length(unique(MatchID)),
AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)*100/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
batcompbypos <- melt(batcompbypos,id.vars = c("position","WinFlag"))
View(batcompbypos)
batcompbypos <- dcast(batcompbypos,position ~ WinFlag)
batcompbypos <- ipl_df %>% filter(BatTeam == team) %>% group_by(position,WinFlag) %>%
dplyr::summarise(AvgRuns = sum(BaRuns)/length(unique(MatchID)),
AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)*100/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
batcompbypos <- melt(batcompbypos,id.vars = c("position","WinFlag"))
batcompbypos <- dcast(batcompbypos,position ~ WinFlag+variable)
ipl_df <- ipl_df %>% mutate(Phase = case_when(Over <= 3 ~ "1",
Over > 3 & Over <= 6 ~ "2",
Over > 6 & Over <= 10 ~ "3",
Over > 10 & Over <= 14 ~ "4",
Over > 14 & Over <= 17 ~ "5",
Over > 17 & Over <= 20 ~ "6"))
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(Phase,WinFlag) %>%
dplyr::summarise(AvgRuns = sum(BaRuns)/length(unique(MatchID)),
AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)*100/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
View(batcompbyphase)
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(Phase,WinFlag) %>%
dplyr::summarise(SR = sum(BaRuns)*100/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced),
BoundaryPC = sum(IsBoundary)/sum(IsBallFaced))
View(batcompbyphase)
batcompbyphase <- melt(batcompbyphase,id.vars = c("Phase","WinFlag"))
View(batcompbyphase)
batcompbypos <- dcast(batcompbypos,Phase ~ WinFlag+variable)
batcompbyphase <- dcast(batcompbyphase,Phase ~ WinFlag+variable)
View(batcompbyphase)
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(Phase,WinFlag) %>%
dplyr::summarise(SR = sum(BaRuns)*6/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced),
BoundaryPC = sum(IsBoundary)/sum(IsBallFaced))
batcompbyphase <- melt(batcompbyphase,id.vars = c("Phase","WinFlag"))
batcompbyphase <- dcast(batcompbyphase,Phase ~ WinFlag+variable)
View(batcompbyphase)
ipl_df = ipl %>% filter(Season == 2019)
ipl_df <- ipl_df %>% mutate(WinFlag = ifelse(Winner == team,"Won","Lost"))
batcompbypos <- ipl_df %>% filter(BatTeam == team) %>% group_by(position,WinFlag) %>%
dplyr::summarise(AvgRuns = sum(BaRuns)/length(unique(MatchID)),
AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)*100/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
batcompbypos <- melt(batcompbypos,id.vars = c("position","WinFlag"))
batcompbypos <- dcast(batcompbypos,position ~ WinFlag+variable)
ipl_df <- ipl_df %>% mutate(Phase = case_when(Over <= 3 ~ "1",
Over > 3 & Over <= 6 ~ "2",
Over > 6 & Over <= 10 ~ "3",
Over > 10 & Over <= 14 ~ "4",
Over > 14 & Over <= 17 ~ "5",
Over > 17 & Over <= 20 ~ "6"))
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(Phase,WinFlag) %>%
dplyr::summarise(SR = sum(BaRuns)*6/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced),
BoundaryPC = sum(IsBoundary)/sum(IsBallFaced))
batcompbyphase <- melt(batcompbyphase,id.vars = c("Phase","WinFlag"))
batcompbyphase <- dcast(batcompbyphase,Phase ~ WinFlag+variable)
View(batcompbypos)
rm(list=ls())
library(dplyr)
library(ggplot2)
library(stringr)
library(reshape2)
source("~/Documents/Work/Messy Fractals/IPL 2020/SeasonSource/season_source.R")
#Function to generate batting positions
ipl <- read.csv("~/Documents/Work/Messy Fractals/Data/Ball-by-ball CSV/IPL Historical + Margin.csv",stringsAsFactors = F)
base <- read.csv("~/Documents/Work/Messy Fractals/Player Report Generation/Source/WP base consolidated.csv",stringsAsFactors = F)
ipl <- create_columns(ipl)
ipl_df=ipl %>% filter(Season==2019)
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = sum(Runs)/sum(Balls),
MatchOutRate = sum(Wickets)/sum(Balls),
MatchAverage = sum(Runs)/sum(Wickets))
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = sum(Runs)/sum(Balls),
MatchOutRate = sum(Wickets)/sum(Balls),
MatchAverage = sum(Runs)/sum(Wickets))
team= "Mumbai Indians"
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = sum(Runs)/sum(Balls),
MatchOutRate = sum(Wickets)/sum(Balls),
MatchAverage = sum(Runs)/sum(Wickets))
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(MatchID,InningsNo,Phase,WinFlag) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)]))
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = sum(Runs)/sum(Balls),
MatchOutRate = sum(Wickets)/sum(Balls),
MatchAverage = sum(Runs)/sum(Wickets))
ipl_df <- ipl_df %>% mutate(WinFlag = ifelse(Winner == team,"Won","Lost"))
batcompbypos <- ipl_df %>% filter(BatTeam == team) %>% group_by(position,InningsNo,WinFlag) %>%
dplyr::summarise(AvgRuns = sum(BaRuns)/length(unique(MatchID)),
AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)*100/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
batcompbypos <- melt(batcompbypos,id.vars = c("position","InningsNo","WinFlag"))
batcompbypos <- dcast(batcompbypos,position ~ WinFlag+InningsNo+variable)
ipl_df <- ipl_df %>% mutate(Phase = case_when(Over <= 3 ~ "1",
Over > 3 & Over <= 6 ~ "2",
Over > 6 & Over <= 10 ~ "3",
Over > 10 & Over <= 14 ~ "4",
Over > 14 & Over <= 17 ~ "5",
Over > 17 & Over <= 20 ~ "6"))
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(MatchID,InningsNo,Phase,WinFlag) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)]))
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = sum(Runs)/sum(Balls),
MatchOutRate = sum(Wickets)/sum(Balls),
MatchAverage = sum(Runs)/sum(Wickets))
View(matchsum)
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = Runs/Balls,
MatchOutRate = Wickets/Balls,
MatchAverage = Runs/Wickets)
View(matchsum)
batcompbyphase <- batcompbyphase %>% left_join(matchsum)
View(batcompbyphase)
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(MatchID,InningsNo,Phase,WinFlag) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)]))
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(MatchRuns = sum(BaRuns),
MatchBalls = sum(IsBallFaced),
MatchWickets = sum(IsWicket),
MatchDots = sum(IsBatDotBall),
MatchBoundaries = sum(BaRuns %in% c(4,6)),
MatchBoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = Runs/Balls,
MatchOutRate = Wickets/Balls,
MatchAverage = Runs/Wickets)
batcompbyphase <- batcompbyphase %>% left_join(matchsum)
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(MatchID,InningsNo,Phase,WinFlag) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)]))
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(MatchRuns = sum(BaRuns),
MatchBalls = sum(IsBallFaced),
MatchWickets = sum(IsWicket),
MatchDots = sum(IsBatDotBall),
MatchBoundaries = sum(BaRuns %in% c(4,6)),
MatchBoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = Runs/Balls,
MatchOutRate = Wickets/Balls,
MatchAverage = Runs/Wickets)
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(MatchRuns = sum(BaRuns),
MatchBalls = sum(IsBallFaced),
MatchWickets = sum(IsWicket),
MatchDots = sum(IsBatDotBall),
MatchBoundaries = sum(BaRuns %in% c(4,6)),
MatchBoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = MatchRuns/MatchBalls,
MatchOutRate = MatchWickets/MatchBalls,
MatchAverage = MatchRuns/MatchWickets)
batcompbyphase <- batcompbyphase %>% left_join(matchsum)
View(batcompbyphase)
batcompbyphase <- batcompbyphase %>% mutate(PhaseRAA = (Runs - MatchStrikeRate*Balls) +
(MatchAverage*Balls*(MatchOutRate - Wickets/Balls)))
batcompbyphase <- batcompbyphase %>% mutate(PhaseRAA = (Runs - MatchStrikeRate*Balls) +
(MatchAverage*Balls*(MatchOutRate - Wickets/Balls)),
PhaseDotsPC = (Dots/Balls) - (MatchDots/MatchBalls),
PhaseBoundaryPC = (Boundaries/Balls) - (MatchBoundaries/MatchBalls))
batcompbyphase <- batcompbyphase %>% mutate(PhaseRAA = (Runs - MatchStrikeRate*Balls) +
(MatchAverage*Balls*(MatchOutRate - Wickets/Balls)),
PhaseDotsPC = (Dots/Balls) - (MatchDots/MatchBalls),
PhaseBoundaryPC = (Boundaries/Balls) - (MatchBoundaries/MatchBalls)) %>%
dplyr::select(MatchID,InningsNo,Phase,WinFlag,PhaseRAA,PhaseDotsPC,PhaseBoundaryPC)
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(MatchID,InningsNo,Phase,WinFlag) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)]))
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(MatchRuns = sum(BaRuns),
MatchBalls = sum(IsBallFaced),
MatchWickets = sum(IsWicket),
MatchDots = sum(IsBatDotBall),
MatchBoundaries = sum(BaRuns %in% c(4,6)),
MatchBoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = MatchRuns/MatchBalls,
MatchOutRate = MatchWickets/MatchBalls,
MatchAverage = MatchRuns/MatchWickets)
batcompbyphase <- batcompbyphase %>% left_join(matchsum)
batcompbyphase <- batcompbyphase %>% mutate(PhaseRAA = (Runs - MatchStrikeRate*Balls) +
(MatchAverage*Balls*(MatchOutRate - Wickets/Balls)),
PhaseSRAA = (Runs - MatchStrikeRate*Balls),
PhaseORAA = (MatchAverage*Balls*(MatchOutRate - Wickets/Balls)),
PhaseDotsPC = (Dots/Balls) - (MatchDots/MatchBalls),
PhaseBoundaryPC = (Boundaries/Balls) - (MatchBoundaries/MatchBalls)) %>%
dplyr::select(MatchID,InningsNo,Phase,WinFlag,PhaseRAA,PhaseSRAA,PhaseORAA,PhaseDotsPC,PhaseBoundaryPC)
View(batcompbyphase)
View(ipl_df)
ipl_df$Winner[ipl$MatchID == "2019-05-02-mumbai-indians-sunrisers-hyderabad"] <- "Mumbai Indians"
ipl_df$Winner[ipl_df$MatchID == "2019-05-02-mumbai-indians-sunrisers-hyderabad"] <- "Mumbai Indians"
ipl_df <- ipl_df %>% mutate(WinFlag = ifelse(Winner == team,"Won","Lost"))
batcompbypos <- ipl_df %>% filter(BatTeam == team) %>% group_by(position,InningsNo,WinFlag) %>%
dplyr::summarise(AvgRuns = sum(BaRuns)/length(unique(MatchID)),
AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)*100/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
batcompbypos <- melt(batcompbypos,id.vars = c("position","InningsNo","WinFlag"))
batcompbypos <- dcast(batcompbypos,position ~ WinFlag+InningsNo+variable)
ipl_df <- ipl_df %>% mutate(Phase = case_when(Over <= 3 ~ "1",
Over > 3 & Over <= 6 ~ "2",
Over > 6 & Over <= 10 ~ "3",
Over > 10 & Over <= 14 ~ "4",
Over > 14 & Over <= 17 ~ "5",
Over > 17 & Over <= 20 ~ "6"))
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(MatchID,InningsNo,Phase,WinFlag) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)]))
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(MatchRuns = sum(BaRuns),
MatchBalls = sum(IsBallFaced),
MatchWickets = sum(IsWicket),
MatchDots = sum(IsBatDotBall),
MatchBoundaries = sum(BaRuns %in% c(4,6)),
MatchBoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = MatchRuns/MatchBalls,
MatchOutRate = MatchWickets/MatchBalls,
MatchAverage = MatchRuns/MatchWickets)
batcompbyphase <- batcompbyphase %>% left_join(matchsum)
batcompbyphase <- batcompbyphase %>% mutate(PhaseRAA = (Runs - MatchStrikeRate*Balls) +
(MatchAverage*Balls*(MatchOutRate - Wickets/Balls)),
PhaseSRAA = (Runs - MatchStrikeRate*Balls),
PhaseORAA = (MatchAverage*Balls*(MatchOutRate - Wickets/Balls)),
PhaseDotsPC = (Dots/Balls) - (MatchDots/MatchBalls),
PhaseBoundaryPC = (Boundaries/Balls) - (MatchBoundaries/MatchBalls)) %>%
dplyr::select(MatchID,InningsNo,Phase,WinFlag,PhaseRAA,PhaseSRAA,PhaseORAA,PhaseDotsPC,PhaseBoundaryPC)
mean(batcompbyphase$PhaseSRAA[batcompbyphase$InningsNo=="1st innings" & batcompbyphase$Phase==6])
rm(list=ls())
gc()
memory.limit()
memory.size()
library(haven)
library(dplyr)
library(ggplot2)
library(cluster)
library(reshape2)
setwd("~/Documents/Writing/Trump Supporter/")
cces_ts <- readRDS("Data/cces_2018_data.RDS")
# cces_ts <- read_dta(file = "./cces18_common_vv.dta")
# saveRDS(cces_ts,"./cces_2018_data.RDS")
cces <- cces_ts %>% select(caseid=caseid,
trumpapprove=CC18_308a,
birthyr,
gender,
sexuality,
educ,
race,
ideo5,
pew_churatd,
newsint,
union,
investor,
tvuse=CC18_300_2 ,
newspaper=CC18_300_3,
radiouse=CC18_300_4,
policespending=CC18_426_4,
# videoabtpolitics=CC18_300d_3,
# fwdpolitics=CC18_300d_5,
alwaysallowabortion=CC18_321a,
allowemployersdenyabortion=CC18_321d,
allabortionsillegal=CC18_321f,
borderspendingpluswall=CC18_322a,
daca=CC18_322b,
# legalimmigration=CC18_322c_new,
cutcorporatetax=CC18_325a,
medicareforall=CC18_327a,
repealobamacare=CC18_327c,
partialrepeallargeempl=CC18_327d,
selfideology=CC18_334A,
trumpideology=CC18_334C,
demideology=CC18_334D,
repideology=CC18_334E,
russiacollusion=CC18_335,
transban=CC18_417_d,
trumpapprovepost=CC18_app_dtrmp_post,
agreewhiteprivilege=CC18_422a,
womenunreasonablesexism=CC18_422c) %>% filter(!is.na(trumpapprove),!is.na(trumpapprovepost))
cces <- cces %>% filter(trumpapprove %in% c(1,2) | trumpapprovepost %in% c(1,2))
colSums(is.na(cces))
cces <- cces %>% na.exclude()
ide <- cces %>% group_by(selfideology,trumpideology) %>% dplyr::summarise(Responses=length(unique(caseid))) %>%
mutate(ResponsesPC = Responses/sum(Responses))
ggplot(ide,aes(x=selfideology,y=trumpideology,size=ResponsesPC)) + geom_point()
ggplot(cces,aes(x=selfideology)) + geom_histogram()
cces_cluster <- cces %>% dplyr::select(caseid,selfideology,trumpideology,russiacollusion,borderspendingpluswall,
womenunreasonablesexism,cutcorporatetax,policespending) %>% mutate_all(as.character())
rownames(cces_cluster) <- cces$caseid
cces_cluster$caseid <- NULL
cces_cluster$selfideology <- as_factor(cces_cluster$selfideology)
cces_cluster$trumpideology <- as_factor(cces_cluster$trumpideology)
cces_cluster$russiacollusion <- as_factor(cces_cluster$russiacollusion)
cces_cluster$borderspendingpluswall <- as_factor(cces_cluster$borderspendingpluswall)
cces_cluster$womenunreasonablesexism <- as_factor(cces_cluster$womenunreasonablesexism)
cces_cluster$cutcorporatetax <- as_factor(cces_cluster$cutcorporatetax)
cces_cluster$policespending <- as_factor(cces_cluster$policespending)
cces_cluster1 <- cces_cluster[sample(1:nrow(cces_cluster),100)]
seq <- 1:nrow(cces_cluster)
cces_cluster1 <- cces_cluster[sample(seq,100)]
cces_cluster1 <- cces_cluster[sample(x = seq,size = 100,replace = T)]
set.seed(123)
selectseq <- sample(x = seq,size = 100,replace = T)
cces_cluster1 <- cces_cluster[selectseq,]
# cces_cluster[,1:7] <- haven::as_factor(cces_cluster[,1:7])
distmatrix <- daisy(x = cces_cluster1,metric = "gower")
plot(hclust(distmatrix))
selectseq <- sample(x = seq,size = 1000,replace = T)
seq <- 1:nrow(cces_cluster)
set.seed(123)
selectseq <- sample(x = seq,size = 1000,replace = T)
cces_cluster1 <- cces_cluster[selectseq,]
# cces_cluster[,1:7] <- haven::as_factor(cces_cluster[,1:7])
distmatrix <- daisy(x = cces_cluster1,metric = "gower")
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")
# function to compute coefficient
ac <- function(x) {
agnes(df, method = x)$ac
}
map_dbl(m, ac)
hc <- hclust(distmatrix)
clust1 <- cutree(hc,k=5)
clust1 <- cutree(hc,k=4)
clust1
cces_cluster1$ClusterAssigned <- cutree(hc,k=4)
table(cces_cluster1$russiacollusion,cces_cluster1$ClusterAssigned)
728+63
63/791
728/791
68/3
table(cces_cluster1$cutcorporatetax,cces_cluster1$ClusterAssigned)
table(cces_cluster1$womenunreasonablesexism,cces_cluster1$ClusterAssigned)
seq <- 1:nrow(cces_cluster)
set.seed(124)
selectseq <- sample(x = seq,size = 1000,replace = T)
cces_cluster1 <- cces_cluster[selectseq,]
# cces_cluster[,1:7] <- haven::as_factor(cces_cluster[,1:7])
distmatrix <- daisy(x = cces_cluster1,metric = "gower")
hc <- hclust(distmatrix)
cces_cluster1$ClusterAssigned <- cutree(hc,k=4)
table(cces_cluster1$russiacollusion,cces_cluster1$ClusterAssigned)
plot(hclust(distmatrix))
seq <- 1:nrow(cces_cluster)
set.seed(124)
selectseq <- sample(x = seq,size = 10000,replace = T)
cces_cluster1 <- cces_cluster[selectseq,]
# cces_cluster[,1:7] <- haven::as_factor(cces_cluster[,1:7])
distmatrix <- daisy(x = cces_cluster1,metric = "gower")
plot(hclust(distmatrix))
hc <- hclust(distmatrix)
cces_cluster1$ClusterAssigned <- cutree(hc,k=6)
table(cces_cluster1$russiacollusion,cces_cluster1$ClusterAssigned)
cces_cluster1$ClusterAssigned <- cutree(hc,k=8)
table(cces_cluster1$russiacollusion,cces_cluster1$ClusterAssigned)
cces_cluster1$ClusterAssigned <- cutree(hc,k=4)
table(cces_cluster1$russiacollusion,cces_cluster1$ClusterAssigned)
cces_cluster1$ClusterAssigned <- cutree(hc,k=15)
table(cces_cluster1$russiacollusion,cces_cluster1$ClusterAssigned)
cces_cluster <- cces %>% dplyr::select(caseid,trumpideology,russiacollusion,borderspendingpluswall,
womenunreasonablesexism,cutcorporatetax,policespending) %>% mutate_all(as.character())
rownames(cces_cluster) <- cces$caseid
cces_cluster$caseid <- NULL
# cces_cluster$selfideology <- as_factor(cces_cluster$selfideology)
cces_cluster$trumpideology <- as_factor(cces_cluster$trumpideology)
cces_cluster$russiacollusion <- as_factor(cces_cluster$russiacollusion)
cces_cluster$borderspendingpluswall <- as_factor(cces_cluster$borderspendingpluswall)
cces_cluster$womenunreasonablesexism <- as_factor(cces_cluster$womenunreasonablesexism)
cces_cluster$cutcorporatetax <- as_factor(cces_cluster$cutcorporatetax)
cces_cluster$policespending <- as_factor(cces_cluster$policespending)
seq <- 1:nrow(cces_cluster)
set.seed(124)
selectseq <- sample(x = seq,size = 10000,replace = T)
cces_cluster1 <- cces_cluster[selectseq,]
# cces_cluster[,1:7] <- haven::as_factor(cces_cluster[,1:7])
distmatrix <- daisy(x = cces_cluster1,metric = "gower")
plot(hclust(distmatrix))
hc <- hclust(distmatrix)
cces_cluster1$ClusterAssigned <- cutree(hc,k=5)
table(cces_cluster1$russiacollusion,cces_cluster1$ClusterAssigned)
table(cces_cluster1$trumpideology,cces_cluster1$ClusterAssigned)
table(cces_cluster1$borderspendingpluswall,cces_cluster1$ClusterAssigned)
table(cces_cluster1$womenunreasonablesexism,cces_cluster1$ClusterAssigned)
table(cces_cluster1$cutcorporatetax,cces_cluster1$ClusterAssigned)
cces_cluster1$ClusterAssigned <- cutree(hc,k=4)
table(cces_cluster1$cutcorporatetax,cces_cluster1$ClusterAssigned)
cces_cluster1$ClusterAssigned <- cutree(hc,k=5)
table(cces_cluster1$cutcorporatetax,cces_cluster1$ClusterAssigned)
table(cces_cluster1$policespending,cces_cluster1$ClusterAssigned)
