Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = sum(Runs)/sum(Balls),
MatchOutRate = sum(Wickets)/sum(Balls),
MatchAverage = sum(Runs)/sum(Wickets))
View(matchsum)
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = Runs/Balls,
MatchOutRate = Wickets/Balls,
MatchAverage = Runs/Wickets)
View(matchsum)
batcompbyphase <- batcompbyphase %>% left_join(matchsum)
View(batcompbyphase)
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(MatchID,InningsNo,Phase,WinFlag) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)]))
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(MatchRuns = sum(BaRuns),
MatchBalls = sum(IsBallFaced),
MatchWickets = sum(IsWicket),
MatchDots = sum(IsBatDotBall),
MatchBoundaries = sum(BaRuns %in% c(4,6)),
MatchBoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = Runs/Balls,
MatchOutRate = Wickets/Balls,
MatchAverage = Runs/Wickets)
batcompbyphase <- batcompbyphase %>% left_join(matchsum)
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(MatchID,InningsNo,Phase,WinFlag) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)]))
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(MatchRuns = sum(BaRuns),
MatchBalls = sum(IsBallFaced),
MatchWickets = sum(IsWicket),
MatchDots = sum(IsBatDotBall),
MatchBoundaries = sum(BaRuns %in% c(4,6)),
MatchBoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = Runs/Balls,
MatchOutRate = Wickets/Balls,
MatchAverage = Runs/Wickets)
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(MatchRuns = sum(BaRuns),
MatchBalls = sum(IsBallFaced),
MatchWickets = sum(IsWicket),
MatchDots = sum(IsBatDotBall),
MatchBoundaries = sum(BaRuns %in% c(4,6)),
MatchBoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = MatchRuns/MatchBalls,
MatchOutRate = MatchWickets/MatchBalls,
MatchAverage = MatchRuns/MatchWickets)
batcompbyphase <- batcompbyphase %>% left_join(matchsum)
View(batcompbyphase)
batcompbyphase <- batcompbyphase %>% mutate(PhaseRAA = (Runs - MatchStrikeRate*Balls) +
(MatchAverage*Balls*(MatchOutRate - Wickets/Balls)))
batcompbyphase <- batcompbyphase %>% mutate(PhaseRAA = (Runs - MatchStrikeRate*Balls) +
(MatchAverage*Balls*(MatchOutRate - Wickets/Balls)),
PhaseDotsPC = (Dots/Balls) - (MatchDots/MatchBalls),
PhaseBoundaryPC = (Boundaries/Balls) - (MatchBoundaries/MatchBalls))
batcompbyphase <- batcompbyphase %>% mutate(PhaseRAA = (Runs - MatchStrikeRate*Balls) +
(MatchAverage*Balls*(MatchOutRate - Wickets/Balls)),
PhaseDotsPC = (Dots/Balls) - (MatchDots/MatchBalls),
PhaseBoundaryPC = (Boundaries/Balls) - (MatchBoundaries/MatchBalls)) %>%
dplyr::select(MatchID,InningsNo,Phase,WinFlag,PhaseRAA,PhaseDotsPC,PhaseBoundaryPC)
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(MatchID,InningsNo,Phase,WinFlag) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)]))
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(MatchRuns = sum(BaRuns),
MatchBalls = sum(IsBallFaced),
MatchWickets = sum(IsWicket),
MatchDots = sum(IsBatDotBall),
MatchBoundaries = sum(BaRuns %in% c(4,6)),
MatchBoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = MatchRuns/MatchBalls,
MatchOutRate = MatchWickets/MatchBalls,
MatchAverage = MatchRuns/MatchWickets)
batcompbyphase <- batcompbyphase %>% left_join(matchsum)
batcompbyphase <- batcompbyphase %>% mutate(PhaseRAA = (Runs - MatchStrikeRate*Balls) +
(MatchAverage*Balls*(MatchOutRate - Wickets/Balls)),
PhaseSRAA = (Runs - MatchStrikeRate*Balls),
PhaseORAA = (MatchAverage*Balls*(MatchOutRate - Wickets/Balls)),
PhaseDotsPC = (Dots/Balls) - (MatchDots/MatchBalls),
PhaseBoundaryPC = (Boundaries/Balls) - (MatchBoundaries/MatchBalls)) %>%
dplyr::select(MatchID,InningsNo,Phase,WinFlag,PhaseRAA,PhaseSRAA,PhaseORAA,PhaseDotsPC,PhaseBoundaryPC)
View(batcompbyphase)
View(ipl_df)
ipl_df$Winner[ipl$MatchID == "2019-05-02-mumbai-indians-sunrisers-hyderabad"] <- "Mumbai Indians"
ipl_df$Winner[ipl_df$MatchID == "2019-05-02-mumbai-indians-sunrisers-hyderabad"] <- "Mumbai Indians"
ipl_df <- ipl_df %>% mutate(WinFlag = ifelse(Winner == team,"Won","Lost"))
batcompbypos <- ipl_df %>% filter(BatTeam == team) %>% group_by(position,InningsNo,WinFlag) %>%
dplyr::summarise(AvgRuns = sum(BaRuns)/length(unique(MatchID)),
AvgBF = sum(IsBallFaced)/length(unique(MatchID)),
SR = sum(BaRuns)*100/sum(IsBallFaced),
DotsPC = sum(IsBatDotBall)/sum(IsBallFaced))
batcompbypos <- melt(batcompbypos,id.vars = c("position","InningsNo","WinFlag"))
batcompbypos <- dcast(batcompbypos,position ~ WinFlag+InningsNo+variable)
ipl_df <- ipl_df %>% mutate(Phase = case_when(Over <= 3 ~ "1",
Over > 3 & Over <= 6 ~ "2",
Over > 6 & Over <= 10 ~ "3",
Over > 10 & Over <= 14 ~ "4",
Over > 14 & Over <= 17 ~ "5",
Over > 17 & Over <= 20 ~ "6"))
batcompbyphase <- ipl_df %>%  filter(BatTeam == team) %>% group_by(MatchID,InningsNo,Phase,WinFlag) %>%
dplyr::summarise(Runs = sum(BaRuns),
Balls = sum(IsBallFaced),
Wickets = sum(IsWicket),
Dots = sum(IsBatDotBall),
Boundaries = sum(BaRuns %in% c(4,6)),
BoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)]))
matchsum <- ipl_df %>%  filter(TeamA == team | TeamB==team) %>% group_by(MatchID) %>%
dplyr::summarise(MatchRuns = sum(BaRuns),
MatchBalls = sum(IsBallFaced),
MatchWickets = sum(IsWicket),
MatchDots = sum(IsBatDotBall),
MatchBoundaries = sum(BaRuns %in% c(4,6)),
MatchBoundaryRuns = sum(BaRuns[BaRuns %in% c(4,6)])) %>% mutate(MatchStrikeRate = MatchRuns/MatchBalls,
MatchOutRate = MatchWickets/MatchBalls,
MatchAverage = MatchRuns/MatchWickets)
batcompbyphase <- batcompbyphase %>% left_join(matchsum)
batcompbyphase <- batcompbyphase %>% mutate(PhaseRAA = (Runs - MatchStrikeRate*Balls) +
(MatchAverage*Balls*(MatchOutRate - Wickets/Balls)),
PhaseSRAA = (Runs - MatchStrikeRate*Balls),
PhaseORAA = (MatchAverage*Balls*(MatchOutRate - Wickets/Balls)),
PhaseDotsPC = (Dots/Balls) - (MatchDots/MatchBalls),
PhaseBoundaryPC = (Boundaries/Balls) - (MatchBoundaries/MatchBalls)) %>%
dplyr::select(MatchID,InningsNo,Phase,WinFlag,PhaseRAA,PhaseSRAA,PhaseORAA,PhaseDotsPC,PhaseBoundaryPC)
mean(batcompbyphase$PhaseSRAA[batcompbyphase$InningsNo=="1st innings" & batcompbyphase$Phase==6])
rm(list=ls())
# Load required libraries
library(haven)
library(dplyr)
library(ggplot2)
library(cluster)
library(reshape2)
setwd("~/Documents/Writing/Trump Supporter/")
# Load the data and choose required columns
cces_ts <- readRDS("Data/cces_2018_data.RDS")
# cces_ts <- read_dta(file = "./cces18_common_vv.dta")
# saveRDS(cces_ts,"./cces_2018_data.RDS")
cces <- cces_ts %>% select(caseid=caseid,
trumpapprove=CC18_308a,
# birthyr,
# gender,
# sexuality,
# educ,
# race,
# ideo5,
# pew_churatd,
# newsint,
# union,
# investor,
# tvuse=CC18_300_2 ,
# newspaper=CC18_300_3,
# radiouse=CC18_300_4,
policespending=CC18_426_4,
# videoabtpolitics=CC18_300d_3,
# fwdpolitics=CC18_300d_5,
alwaysallowabortion=CC18_321a,
exceptionabortion=CC18_321b,
allowemployersdenyabortion=CC18_321d,
allabortionsillegal=CC18_321f,
borderspendingpluswall=CC18_322a,
daca=CC18_322b,
# legalimmigration=CC18_322c_new,
cutcorporatetax=CC18_325a,
medicareforall=CC18_327a,
repealobamacare=CC18_327c,
partialrepeallargeempl=CC18_327d,
selfideology=CC18_334A,
trumpideology=CC18_334C,
demideology=CC18_334D,
repideology=CC18_334E,
russiacollusion=CC18_335,
# pew_bornagain,
banassault=CC18_320c,
backgroundchecks=CC18_320a,
easierconcealed=CC18_320d,
transban=CC18_417_d,
trumpapprovepost=CC18_app_dtrmp_post,
agreewhiteprivilege=CC18_422a,
womenunreasonablesexism=CC18_422c) %>% filter(!is.na(trumpapprove),!is.na(trumpapprovepost))
cces <- cces %>% filter(trumpapprove %in% c(1,2) | trumpapprovepost %in% c(1,2))
colSums(is.na(cces))
cces <- cces %>% na.exclude()
ggplot(cces,aes(x=trumpideology - repideology))+ geom_histogram(aes(y=..density..))
# Create a df for clustering, selecting only a few columns
cces_cluster <- cces %>% #dplyr::select(caseid,selfideology,borderspendingpluswall,cutcorporatetax) %>%
mutate_all(as.character())
rownames(cces_cluster) <- cces$caseid
cces_cluster$caseid <- NULL
for(i in 1:ncol(cces_cluster))
{
cces_cluster[,i] <- as_factor(cces_cluster[,i])
}
# My system crashes if I try to create a gower dissimilarity matrix with 22k respondents.
# Longer run solution: selecting fewer variables. Short-run solution: sampling 10k rows and working with it.
seq <- 1:nrow(cces_cluster)
set.seed(124)
selectseq <- sample(x = seq,size = 10000,replace = T)
cces_cluster1 <- cces_cluster[selectseq,]
# creating distance matrix
distmatrix <- daisy(x = cces_cluster1,metric = "gower")
plot(hclust(distmatrix))
hc <- hclust(distmatrix,method="complete")
plot(hclust(distmatrix))
cces_cluster1$caseid <- rownames(cces_cluster1)
cces_cluster1$ClusterAssigned <- cutree(hc,k=4)
#Trying to profile these clusters created
table(cces_cluster1$policespending,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$borderspendingpluswall,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$daca,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$cutcorporatetax,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$allabortionsillegal,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$allowemployersdenyabortion,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$cutcorporatetax,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$repealobamacare,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$womenunreasonablesexism,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$selfideology,cces_cluster1$ClusterAssigned)
plot(hclust(distmatrix,method="average"))
plot(hclust(distmatrix,method="centroid"))
plot(hclust(distmatrix,method="single"))
plot(hclust(distmatrix,method = "complete"))
cces_cluster1$caseid <- rownames(cces_cluster1)
cces_cluster1$ClusterAssigned <- cutree(hc,k=5)
#Trying to profile these clusters created
table(cces_cluster1$selfideology,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$trumpapprove,cces_cluster1$ClusterAssigned)
# cces_ts <- read_dta(file = "./cces18_common_vv.dta")
# saveRDS(cces_ts,"./cces_2018_data.RDS")
cces <- cces_ts %>% select(caseid=caseid,
trumpapprove=CC18_308a,
# birthyr,
# gender,
# sexuality,
# educ,
# race,
# ideo5,
# pew_churatd,
# newsint,
# union,
# investor,
# tvuse=CC18_300_2 ,
# newspaper=CC18_300_3,
# radiouse=CC18_300_4,
policespending=CC18_426_4,
# videoabtpolitics=CC18_300d_3,
# fwdpolitics=CC18_300d_5,
alwaysallowabortion=CC18_321a,
exceptionabortion=CC18_321b,
allowemployersdenyabortion=CC18_321d,
allabortionsillegal=CC18_321f,
borderspendingpluswall=CC18_322a,
daca=CC18_322b,
# legalimmigration=CC18_322c_new,
cutcorporatetax=CC18_325a,
medicareforall=CC18_327a,
repealobamacare=CC18_327c,
partialrepeallargeempl=CC18_327d,
selfideology=CC18_334A,
trumpideology=CC18_334C,
demideology=CC18_334D,
repideology=CC18_334E,
russiacollusion=CC18_335,
# pew_bornagain,
banassault=CC18_320c,
backgroundchecks=CC18_320a,
easierconcealed=CC18_320d,
transban=CC18_417_d,
trumpapprovepost=CC18_app_dtrmp_post,
agreewhiteprivilege=CC18_422a,
womenunreasonablesexism=CC18_422c) %>% filter(!is.na(trumpapprove),!is.na(trumpapprovepost))
cces <- cces %>% filter(trumpapprove %in% c(1,2))
colSums(is.na(cces))
cces <- cces %>% na.exclude()
ggplot(cces,aes(x=trumpideology - repideology))+ geom_histogram(aes(y=..density..))
# Create a df for clustering, selecting only a few columns
cces_cluster <- cces %>% #dplyr::select(caseid,selfideology,borderspendingpluswall,cutcorporatetax) %>%
mutate_all(as.character())
rownames(cces_cluster) <- cces$caseid
cces_cluster$caseid <- NULL
for(i in 1:ncol(cces_cluster))
{
cces_cluster[,i] <- as_factor(cces_cluster[,i])
}
# My system crashes if I try to create a gower dissimilarity matrix with 22k respondents.
# Longer run solution: selecting fewer variables. Short-run solution: sampling 10k rows and working with it.
seq <- 1:nrow(cces_cluster)
set.seed(124)
selectseq <- sample(x = seq,size = 10000,replace = T)
cces_cluster1 <- cces_cluster[selectseq,]
# creating distance matrix
distmatrix <- daisy(x = cces_cluster1,metric = "gower")
plot(hclust(distmatrix,method = "complete"))
hc <- hclust(distmatrix,method="complete")
cces_cluster1$caseid <- rownames(cces_cluster1)
cces_cluster1$ClusterAssigned <- cutree(hc,k=6)
#Trying to profile these clusters created
table(cces_cluster1$trumpapprove,cces_cluster1$ClusterAssigned)
cces_cluster1$ClusterAssigned <- cutree(hc,k=3)
#Trying to profile these clusters created
table(cces_cluster1$trumpapprove,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$policespending,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$alwaysallowabortion,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$borderspendingpluswall,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$daca,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$womenunreasonablesexism,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$medicareforall,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$russiacollusion,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$allowemployersdenyabortion,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$alwaysallowabortion,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$agreewhiteprivilege,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$repealobamacare,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$selfideology,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$cutcorporatetax,cces_cluster1$ClusterAssigned)
# Create a df for clustering, selecting only a few columns
cces_cluster <- cces %>% dplyr::select(-trumpapprove) #dplyr::select(caseid,selfideology,borderspendingpluswall,cutcorporatetax) %>%
# Create a df for clustering, selecting only a few columns
cces_cluster <- cces %>% dplyr::select(-trumpapprove) %>%  #dplyr::select(caseid,selfideology,borderspendingpluswall,cutcorporatetax) %>%
mutate_all(as.character())
rownames(cces_cluster) <- cces$caseid
cces_cluster$caseid <- NULL
for(i in 1:ncol(cces_cluster))
{
cces_cluster[,i] <- as_factor(cces_cluster[,i])
}
# My system crashes if I try to create a gower dissimilarity matrix with 22k respondents.
# Longer run solution: selecting fewer variables. Short-run solution: sampling 10k rows and working with it.
seq <- 1:nrow(cces_cluster)
set.seed(124)
selectseq <- sample(x = seq,size = 10000,replace = T)
cces_cluster1 <- cces_cluster[selectseq,]
# creating distance matrix
distmatrix <- daisy(x = cces_cluster1,metric = "gower")
plot(hclust(distmatrix,method = "complete"))
hc <- hclust(distmatrix,method="complete")
cces_cluster1$caseid <- rownames(cces_cluster1)
cces_cluster1$ClusterAssigned <- cutree(hc,k=7)
#Trying to profile these clusters created
table(cces_cluster1,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$policespending,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$cutcorporatetax,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$repealobamacare,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$alwaysallowabortion,cces_cluster1$ClusterAssigned)
#Trying to profile these clusters created
table(cces_cluster1$selfideology,cces_cluster1$ClusterAssigned)
View(cces_cluster1)
#Trying to profile these clusters created
cces_cluster1 %>% group_by(ClusterAssigned,selfideology) %>% dplyr::summarise(Responses=length(unique(caseid)))
#Trying to profile these clusters created
clusterideolog <- cces_cluster1 %>% group_by(ClusterAssigned,selfideology) %>% dplyr::summarise(Responses=length(unique(caseid)))
clusterideolog$ResponsesTotal <- ave(clusterideolog$Responses,clusterideolog$ClusterAssigned,FUN=sum)
clusterideolog$ResponsePC <- clusterideolog$Responses/clusterideolog$ResponsesTotal
View(clusterideolog)
clusterideolog <- clusterideolog %>% dplyr::select(selfideology,ClusterAssigned,ResponsePC) %>%
dcast(selfideology~ClusterAssigned)
table(cces_cluster1$allabortionsillegal,cces_cluster1$ClusterAssigned)
table(cces_cluster1$medicareforall,cces_cluster1$ClusterAssigned)
# cces_ts <- read_dta(file = "./cces18_common_vv.dta")
# saveRDS(cces_ts,"./cces_2018_data.RDS")
cces <- cces_ts %>% select(caseid=caseid,
trumpapprove=CC18_308a,
# birthyr,
# gender,
# sexuality,
# educ,
# race,
# ideo5,
# pew_churatd,
# newsint,
# union,
# investor,
# tvuse=CC18_300_2 ,
# newspaper=CC18_300_3,
# radiouse=CC18_300_4,
policespending=CC18_426_4,
# videoabtpolitics=CC18_300d_3,
# fwdpolitics=CC18_300d_5,
alwaysallowabortion=CC18_321a,
exceptionabortion=CC18_321b,
allowemployersdenyabortion=CC18_321d,
allabortionsillegal=CC18_321f,
borderspendingpluswall=CC18_322a,
daca=CC18_322b,
reducelegalimmigration=CC18_322c_new,
dacawallandreducelegal=CC18_322d_new,
reentryprison=CC18_322f,
cutcorporatetax=CC18_325a,
cuttaxeslt500k=CC18_325e_new,
cuttaxesgt500k=CC18_325f_new,
medicareforall=CC18_327a,
repealobamacare=CC18_327c,
partialrepeallargeempl=CC18_327d,
chinatariff=CC18_331a,
allowkeystone=CC18_332b,
withdrawparis=CC18_332c,
withdrawtpp = CC18_332e,
selfideology=CC18_334A,
trumpideology=CC18_334C,
demideology=CC18_334D,
repideology=CC18_334E,
russiacollusion=CC18_335,
epaco2=CC18_415a,
environprot = CC18_415d,
muslimban=CC18_417_c,
blackswithoutfavours=CC18_422e,
blacksgottenlessthandeserve=CC18_422g,
blackstryharder=CC18_422h,
whiteprivilege=CC18_422a,
racismrare = CC18_422b,
feministreasonable=CC18_422d,
welfarespend=CC18_426_1,
# pew_bornagain,
banassault=CC18_320c,
backgroundchecks=CC18_320a,
easierconcealed=CC18_320d,
transban=CC18_417_d,
trumpapprovepost=CC18_app_dtrmp_post,
womenunreasonablesexism=CC18_422c) %>% filter(!is.na(trumpapprove),!is.na(trumpapprovepost))
cces <- cces %>% filter(trumpapprove %in% c(1,2))
colSums(is.na(cces))
cces <- cces %>% na.exclude()
ggplot(cces,aes(x=trumpideology - repideology))+ geom_histogram(aes(y=..density..))
# Create a df for clustering, selecting only a few columns
cces_cluster <- cces %>% dplyr::select(-trumpapprove) %>%  #dplyr::select(caseid,selfideology,borderspendingpluswall,cutcorporatetax) %>%
mutate_all(as.character())
rownames(cces_cluster) <- cces$caseid
cces_cluster$caseid <- NULL
for(i in 1:ncol(cces_cluster))
{
cces_cluster[,i] <- as_factor(cces_cluster[,i])
}
# My system crashes if I try to create a gower dissimilarity matrix with 22k respondents.
# Longer run solution: selecting fewer variables. Short-run solution: sampling 10k rows and working with it.
seq <- 1:nrow(cces_cluster)
set.seed(124)
selectseq <- sample(x = seq,size = 10000,replace = T)
cces_cluster1 <- cces_cluster[selectseq,]
# creating distance matrix
distmatrix <- daisy(x = cces_cluster1,metric = "gower")
plot(hclust(distmatrix,method = "complete"))
hc <- hclust(distmatrix,method="complete")
cces_cluster1$caseid <- rownames(cces_cluster1)
cces_cluster1$ClusterAssigned <- cutree(hc,k=6)
#Trying to profile these clusters created
clusterideolog <- cces_cluster1 %>% group_by(ClusterAssigned,selfideology) %>% dplyr::summarise(Responses=length(unique(caseid)))
clusterideolog$ResponsesTotal <- ave(clusterideolog$Responses,clusterideolog$ClusterAssigned,FUN=sum)
clusterideolog$ResponsePC <- clusterideolog$Responses/clusterideolog$ResponsesTotal
clusterideolog <- clusterideolog %>% dplyr::select(selfideology,ClusterAssigned,ResponsePC) %>%
dcast(selfideology~ClusterAssigned)
View(clusterideolog)
cces_cluster1$ClusterAssigned <- cutree(hc,k=7)
#Trying to profile these clusters created
clusterideolog <- cces_cluster1 %>% group_by(ClusterAssigned,selfideology) %>% dplyr::summarise(Responses=length(unique(caseid)))
clusterideolog$ResponsesTotal <- ave(clusterideolog$Responses,clusterideolog$ClusterAssigned,FUN=sum)
clusterideolog$ResponsePC <- clusterideolog$Responses/clusterideolog$ResponsesTotal
clusterideolog <- clusterideolog %>% dplyr::select(selfideology,ClusterAssigned,ResponsePC) %>%
dcast(selfideology~ClusterAssigned)
View(clusterideolog)
table(cces_cluster1$medicareforall,cces_cluster1$ClusterAssigned)
table(cces_cluster1$borderspendingpluswall,cces_cluster1$ClusterAssigned)
table(cces_cluster1$daca,cces_cluster1$ClusterAssigned)
table(cces_cluster1$repealobamacare,cces_cluster1$ClusterAssigned)
table(cces_cluster1$reentryprison,cces_cluster1$ClusterAssigned)
table(cces_cluster1$backgroundchecks,cces_cluster1$ClusterAssigned)
table(cces_cluster1$cutcorporatetax,cces_cluster1$ClusterAssigned)
table(cces_cluster1$chinatariff,cces_cluster1$ClusterAssigned)
table(cces_cluster1$russiacollusion,cces_cluster1$ClusterAssigned)
table(cces_cluster1$welfarespend,cces_cluster1$ClusterAssigned)
table(cces_cluster1$allowkeystone,cces_cluster1$ClusterAssigned)
colnames(cces_cluster1)
