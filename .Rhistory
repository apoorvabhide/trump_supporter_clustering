posts <- ggplot(datewise_posts,aes(x = Date, y =Posts)) + geom_col(fill="#101e36",width=0.5)+
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(colour = "#c1c3c4"),
panel.grid.major = element_line(size = 0.5, linetype = 'dotted',
colour = "#c1c3c4"))
insta$DayofWeek <- strftime(insta$Date,"%a")
datewise_reach$DayofWeek <- strftime(datewise_reach$Date,"%a")
reach_by_day <- datewise_reach %>% group_by(DayofWeek) %>% dplyr::summarise(Reach = mean(Reach))
reach_by_day$DayofWeek <- factor(reach_by_day$DayofWeek, levels=c("Mon","Tue","Wed","Thu","Fri","Sat","Sun"))
ggplot(reach_by_day,aes(x=DayofWeek,y=Reach)) + geom_col(fill="#eb8705") + xlab("Day of the Week") + ylab("Average Post Reach")+
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(colour = "#c1c3c4"),
panel.grid.major = element_line(size = 0.5, linetype = 'dotted',
colour = "#c1c3c4"))
# Which posts have given us the most followers?
follows <- insta %>% group_by(PostNo, Date, Content.type,Content) %>% dplyr::summarise(ProfileVisits=sum(Profile.visit),
Follows = sum(Follows))
ggplot(follows,aes(x=ProfileVisits,y=Follows,colour=as.factor(Content.type))) + geom_point()
likes <- insta %>% group_by(Content.type) %>% dplyr::summarise(Posts=length(unique(PostNo)),
CommentRatio = sum(Comment)/sum(Reach),
ForwardRatio= sum(Forward)/sum(Reach),
BookmarkRatio = sum(Bookmark)/sum(Reach),
LikeRatio = sum(LikesRatio=sum(Like)/sum(Reach))) %>%
filter(Posts >= 3)
insta$Gender[insta$Gender=="Man"] <- "Men"
reachbygender <- insta %>% group_by(Gender) %>% dplyr::summarise(Posts=length(unique(PostNo)),
MeanReach = mean(Reach),
CommentRatio = sum(Comment)/sum(Reach),
ForwardRatio= sum(Forward)/sum(Reach),
BookmarkRatio = sum(Bookmark)/sum(Reach),
LikeRatio = sum(LikesRatio=sum(Like)/sum(Reach)))
View(insta)
top5byreach <- insta %>% group_by(PostNo, Date,Content.type,Event,Content) %>% dplyr::summarise(Reach = sum(Reach)) %>%
arrange(desc(Reach)) %>% slice(1:5)
View(top5byreach)
top5byreach <- insta %>% select(PostNo, Date,Content.type,Event,Content) %>% arrange(desc(Reach)) %>% slice(1:5)
top5byreach <- insta %>% select(PostNo, Date,Content.type,Event,Content,Reach) %>% arrange(desc(Reach)) %>% slice(1:5)
top5bybm <- insta %>% select(PostNo, Date,Content.type,Event,Content,Bookmark) %>% arrange(desc(Bookmark)) %>% slice(1:5)
View(top5bybm)
top5byfollow <- insta %>% select(PostNo, Date,Content.type,Event,Content,Follows) %>% arrange(desc(Follows)) %>% slice(1:5)
View(top5byfollow)
top5byfwd <- insta %>% select(PostNo, Date,Content.type,Event,Content,Forward) %>% arrange(desc(Forward)) %>% slice(1:5)
View(top5byfwd)
rm(list = ls())
library(ggplot2)
library(dplyr)
library(reshape2)
library(stringr)
library(xgboost)
library(ggrepel)
library(tidyr)
source("~/Desktop/Messy Fractals/Player Report Generation/Source/player_report_source.R")
#Train Random Forest model on this
divide_train_test <- function(df, seed)
{
smp_size <- floor(0.70 * nrow(df))
## set the seed to make your partition reproducible
set.seed(seed)
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
test <- df[-train_ind, ]
train_test <- list("train" = train,"test" = test)
return(train_test)
}
baraa <- function(df)
{
df$MatchRuns <- ave(df$runs,df$MatchID,FUN=sum)
df$MatchBalls <- ave(df$balls_faced,df$MatchID,FUN=sum)
df$MatchOuts <- ave(df$outs,df$MatchID,FUN=sum)
df$MatchAvg <- df$MatchRuns/df$MatchOuts
df$MatchSR <- df$MatchRuns/df$MatchBalls
df$MatchOutRate <- df$MatchOuts/df$MatchBalls
df %>% select(-MatchRuns,-MatchBalls,-MatchOuts)
df$BaRAA <- (df$runs - (df$MatchSR*df$balls_faced))+
(df$MatchAvg)*(df$balls_faced)*(df$MatchOutRate - (df$outs/df$balls_faced))
return(df$BaRAA)
}
batting_positions <- function(df, batsman_col)
{
colnames(df)[colnames(df) == batsman_col] <- "striker"
df$MatchInnings <- paste(df$MatchID, df$InningsNo, sep = "|")
miu <- unique(df$MatchInnings)
# u <- data.frame()
# mi <- miu[1]
bo <- data.frame()
for(mi in miu)
{
x <- df[df$MatchInnings == mi,]
x$DeliveryID <- as.numeric(x$DeliveryID)
x <- x %>% arrange(DeliveryID)
Batsman <- unique(x$striker)
batorder <- data.frame(Batsman, position = 1:length(Batsman))
batorder$mi <- mi
bo <- rbind(bo, batorder)
}
bo$MatchID <- sapply(bo$mi, function(x){str_split(x,"\\|")[[1]][1]})
bo$InningsNo <- sapply(bo$mi, function(x){str_split(x,"\\|")[[1]][2]})
return(bo)
}
# Read IPL data
ipl <- read.csv("~/Desktop/Messy Fractals/Data/Ball-by-ball CSV/IPL Historical + Margin.csv",stringsAsFactors = F)
ipl$Season <- as.integer(substr(ipl$MatchDate,1,4))
ipl$IsBallFaced <- as.numeric(ifelse(ipl$ExtraW > 0, 0, 1))
ipl$IsBallBowled <- as.numeric(ifelse(ipl$ExtraW + ipl$ExtraNB > 0, 0, 1))
ipl$IsBoundary <- as.numeric(ifelse(ipl$BaRuns == 4 | ipl$BaRuns==6,1,0))
ipl$IsBatDotBall <- as.numeric(ifelse(ipl$BaRuns == 0 & ipl$ExtraW == 0,1,0))
ipl$IsWicket <- as.numeric(ifelse(!is.na(ipl$PlayerOut),1,0))
ipl$IsBowlWicket <- as.numeric(ifelse(!is.na(ipl$PlayerOut) & !ipl$Dismissal %in% c("run out","obstructing the field",
"retired hurt"),1,0))
ipl$BowlTeam <- as.character(ifelse(ipl$TeamA == ipl$BatTeam, ipl$TeamB,ipl$TeamA))
ipl$IsBowlDotBall <- as.integer(ifelse(ipl$TRuns - ipl$ExtraB - ipl$ExtraLB == 0, 1, 0))
base <- read.csv("~/Desktop/Messy Fractals/Player Report Generation/Source/WP base consolidated.csv",stringsAsFactors = F)
# Remove playoffs matches
ipl_matches <- ipl %>% distinct(Season, MatchID,TeamA,TeamB)
ipl_matches$MatchNo <- 1
ipl_matches$MatchNo <- ave(ipl_matches$MatchNo,ipl_matches$Season,FUN = cumsum)
playoffs1 <- ipl_matches %>% filter(Season <= 2010) %>% group_by(Season) %>% arrange(desc(MatchNo)) %>% slice(1:3)
playoffs2 <- ipl_matches %>% filter(Season > 2010) %>% group_by(Season) %>% arrange(desc(MatchNo)) %>% slice(1:4)
playoffs <- rbind(playoffs1,playoffs2)
ipl_matches <- ipl_matches %>% anti_join(playoffs)
ipl <- ipl %>% inner_join(ipl_matches)
# Add list of qualified teams
team <- ipl_matches %>% distinct(Season,TeamA) %>% rename(Team = TeamA)
team <- rbind(team,data.frame(Season = 2009,Team = "Rajasthan Royals",stringsAsFactors = F))
qualify <- read.csv("~/Desktop/Messy Fractals/Data/Team Composition/qualified_teams.csv",stringsAsFactors = F)
team <- team %>% left_join(qualify) %>% replace(is.na(.),0)
worst4 <- wpa_df %>% group_by(Season,MatchID,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
# Mean WPA contributed in 15 --> 20  by best batsman
wpa_df <- wpa_prediction(df = ipl,base_df = base,total_overs_col = "TotalOvers",match_id = "MatchID",batsman_col = "striker",
bowler_col = "bowler",innings_no = "InningsNo",total_runs_col = "TRuns",batsman_out_col = "PlayerOut",
col_wd = "ExtraW",col_nb = "ExtraNB")
wpa_df$Over <- sapply(wpa_df$DeliveryID, function(x){as.numeric(str_split(x,"\\.")[[1]][1]) + 1})
wpa_df$Season <- as.integer(substr(wpa_df$MatchID,1,4))
match_wpa_death <- wpa_df %>% filter(Over >= 16) %>% group_by(Season, MatchID, BatTeam,Batsman) %>% dplyr::summarise(WPA = sum(wp_diff_batsman))
match_bf_death <- ipl2 %>% filter(Over >= 16) %>% group_by(Season, MatchID, BatTeam,striker) %>%
dplyr::summarise(BallsFaced = sum(IsBallFaced)) %>% rename(Batsman = striker)
# WPA of the worst four overs
worst4 <- wpa_df %>% group_by(Season,MatchID,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
worst4 <- worst4 %>% group_by(Season,BowlTeam,MatchID) %>% dplyr::summarise(Worst4WPA = sum(WPA))
# WPA of the worst four overs
worst4 <- wpa_df %>% group_by(Season,MatchID,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
View(worst4)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% group_by(Season,MatchID,bowler,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% group_by(Season,MatchID,Bowler,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
View(worst4)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% group_by(Season,MatchID,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
match_over_bowlers <- wpa_df %>% distinct(Season,MatchID,InningsNo,BowlTeam,Bowler,Over)
View(match_over_bowlers)
worst4bowlers <- worst4 %>% inner_join(match_over_bowlers)
View(worst4bowlers)
View(worst4)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
match_over_bowlers <- wpa_df %>% distinct(Season,MatchID,InningsNo,BowlTeam,Bowler,Over)
worst4bowlers <- worst4 %>% inner_join(match_over_bowlers)
View(worst4bowlers)
View(worst4)
match_over_bowlers <- wpa_df %>% distinct(Season,MatchID,InningsNo,BowlTeam,Over,Bowler)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
match_over_bowlers <- wpa_df %>% distinct(Season,MatchID,InningsNo,BowlTeam,Over,Bowler)
worst4bowlers <- worst4 %>% inner_join(match_over_bowlers)
worst4bowlers <- worst4 %>% left_join(match_over_bowlers)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
match_over_bowlers <- wpa_df %>% distinct(Season,MatchID,InningsNo,BowlTeam,Over,Bowler)
worst4bowlers <- worst4 %>% left_join(match_over_bowlers)
match_over_bowlers <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over,Bowler)
match_over_bowlers <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% distinct(Bowler)
worst4bowlers <- worst4 %>% left_join(match_over_bowlers)
worst4teamovers <- worst4 %>% group_by(Season,MatchID,InningsNo,BowlTeam) %>% dplyr::summarise(Overs = length(Over))
View(worst4teamovers)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% filter(Season >= 2018) %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% filter(Season >= 2018) %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
match_over_bowlers <- wpa_df  %>% filter(Season >= 2018) %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% distinct(Bowler)
worst4bowlers <- worst4 %>% left_join(match_over_bowlers)
worst4bowlers$MatchID[worst4bowlers$MatchID %in% unique(worst4$MatchID)]
worst4bowlers$MatchID[!worst4bowlers$MatchID %in% unique(worst4$MatchID)]
worst4bowlers$Over[!worst4bowlers$Over %in% unique(worst4$Over)]
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% filter(Season >= 2018) %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% distinct(Bowler) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% filter(Season >= 2018) %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler),
Bowler=unique(Bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% filter(Season >= 2018) %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler),
Bowler=length(unique(Bowler))) %>% arrange(WPA) %>%
dplyr::slice(1:4)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% filter(Season >= 2018) %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler),
Bowlers=length(unique(Bowler)),
BowlerNames=c(Bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% filter(Season >= 2018) %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler),
Bowlers=length(unique(Bowler)),
BowlerNames=paste0(Bowler,collapse = ",")) %>% arrange(WPA) %>%
dplyr::slice(1:4)
AD Russell,AD Russell,AD Russell,AD Russell,AD Russell,N Rana
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% filter(Season >= 2018) %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
match_over_bowlers <- wpa_df  %>% filter(Season >= 2018) %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
match_over_bowlers <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over)
worst4bowlers <- worst4 %>% left_join(match_over_bowlers)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
match_over_bowlers <- wpa_df %>% distinct(Season,MatchID,InningsNo,BowlTeam,Over,Bowler)
worst4bowlers <- worst4 %>% left_join(match_over_bowlers)
View(worst4bowlers)
#CSK
cskworst4 <- worst4bowlers %>% mutate(OverID=paste0(MatchID,InnigsNo,Over,sep=" | ")) %>% group_by(Season,BowlTeam,Bowler) %>%
dplyr::summarise(Overs = length(unique(OverID)))
#CSK
cskworst4 <- worst4bowlers %>% mutate(OverID=paste0(MatchID,InningsNo,Over,sep=" | ")) %>% group_by(Season,BowlTeam,Bowler) %>%
dplyr::summarise(Overs = length(unique(OverID)))
View(cskworst4)
#CSK
cskworst4 <- worst4bowlers %>% filter(Season>=2018) %>% mutate(OverID=paste0(MatchID,InningsNo,Over,sep=" | ")) %>% group_by(Season,BowlTeam,Bowler) %>%
dplyr::summarise(Overs = length(unique(OverID)),
TotalWPA = sum(WPA),
MeanWPA=mean(WPA),
SDWPA=sd(WPA))
#CSK
cskworst4 <- worst4bowlers %>% filter(Season>=2018,
BowlTeam="Chennai Super Kings") %>% mutate(OverID=paste0(MatchID,InningsNo,Over,sep=" | ")) %>% group_by(Season,BowlTeam,Bowler) %>%
dplyr::summarise(Overs = length(unique(OverID)),
TotalWPA = sum(WPA),
MeanWPA=mean(WPA),
SDWPA=sd(WPA))
#CSK
cskworst4 <- worst4bowlers %>% filter(Season>=2018,
BowlTeam=="Chennai Super Kings") %>% mutate(OverID=paste0(MatchID,InningsNo,Over,sep=" | ")) %>% group_by(Season,BowlTeam,Bowler) %>%
dplyr::summarise(Overs = length(unique(OverID)),
TotalWPA = sum(WPA),
MeanWPA=mean(WPA),
SDWPA=sd(WPA))
#CSK
cskworst4 <- worst4bowlers %>% filter(Season>=2018,
BowlTeam=="Chennai Super Kings") %>% mutate(OverID=paste0(MatchID,InningsNo,Over,sep=" | ")) %>% group_by(Season,BowlTeam,Bowler) %>%
dplyr::summarise(Overs = length(unique(OverID)),
Runs=sum(Runs),
TotalWPA = sum(WPA),
MeanWPA=mean(WPA),
SDWPA=sd(WPA))
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler),
Runs=sum(Runs)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
match_over_bowlers <- wpa_df %>% distinct(Season,MatchID,InningsNo,BowlTeam,Over,Bowler)
worst4bowlers <- worst4 %>% left_join(match_over_bowlers)
#CSK
cskworst4 <- worst4bowlers %>% filter(Season>=2018,
BowlTeam=="Chennai Super Kings") %>% mutate(OverID=paste0(MatchID,InningsNo,Over,sep=" | ")) %>% group_by(Season,BowlTeam,Bowler) %>%
dplyr::summarise(Overs = length(unique(OverID)),
Runs=sum(Runs),
TotalWPA = sum(WPA),
MeanWPA=mean(WPA),
SDWPA=sd(WPA))
#CSK
cskworst4 <- worst4bowlers %>% filter(Season>=2018,
BowlTeam=="Chennai Super Kings") %>% mutate(OverID=paste0(MatchID,InningsNo,Over,sep=" | ")) %>% group_by(Season,BowlTeam,Bowler) %>%
dplyr::summarise(Overs = length(unique(OverID)),
TotalWPA = sum(WPA),
MeanWPA=mean(WPA),
SDWPA=sd(WPA))
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler),
Runs=sum(Runs)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
View(worst4)
View(wpa_df)
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler),
Runs=sum(TRuns)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
match_over_bowlers <- wpa_df %>% distinct(Season,MatchID,InningsNo,BowlTeam,Over,Bowler)
worst4bowlers <- worst4 %>% left_join(match_over_bowlers)
#CSK
cskworst4 <- worst4bowlers %>% filter(Season>=2018,
BowlTeam=="Chennai Super Kings") %>% mutate(OverID=paste0(MatchID,InningsNo,Over,sep=" | ")) %>% group_by(Season,BowlTeam,Bowler) %>%
dplyr::summarise(Overs = length(unique(OverID)),
TotalWPA = sum(WPA),
MeanWPA=mean(WPA),
SDWPA=sd(WPA))
View(cskworst4)
#CSK
cskworst4 <- worst4bowlers %>% filter(Season>=2018,
BowlTeam=="Chennai Super Kings") %>% mutate(OverID=paste0(MatchID,InningsNo,Over,sep=" | ")) %>% group_by(Season,BowlTeam,Bowler) %>%
dplyr::summarise(Overs = length(unique(OverID)),
Runs=sum(Runs),
TotalWPA = sum(WPA),
MeanWPA=mean(WPA),
SDWPA=sd(WPA))
View(worst4bowlers)
View(worst4)
oversbowled <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Bowler) %>% dplyr::summarise(Overs = length(unique(Over)))
View(oversbowled)
worst4bowlers <- worst4 %>% left_join(match_over_bowlers) %>% left_join(oversbowled)
View(worst4bowlers)
#CSK
cskworst4 <- worst4bowlers %>% filter(Season>=2018,
BowlTeam=="Chennai Super Kings") %>% mutate(OverID=paste0(MatchID,InningsNo,Over,sep=" | ")) %>%
group_by(Season,BowlTeam,Bowler) %>% dplyr::summarise(Overs = length(unique(OverID)),
OversPC= length(unique(OverID))/sum(Overs),
Runs=sum(Runs),
TotalWPA = sum(WPA),
MeanWPA=mean(WPA),
SDWPA=sd(WPA))
View(cskworst4)
worst4bowlers <- worst4 %>% left_join(match_over_bowlers) %>% left_join(oversbowled)
#CSK
cskworst4 <- worst4bowlers %>% filter(Season>=2018,
BowlTeam=="Chennai Super Kings") %>% mutate(OverID=paste0(MatchID,InningsNo,Over,sep=" | ")) %>%
group_by(Season,BowlTeam,Bowler) %>% dplyr::summarise(Overs = length(unique(OverID)),
OversPC= length(unique(OverID))/sum(OversBowled),
Runs=sum(Runs),
TotalWPA = sum(WPA),
MeanWPA=mean(WPA),
SDWPA=sd(WPA))
#1. Who are the bowlers bowling the worst 4 overs?
worst4 <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Over) %>% dplyr::summarise(WPA = sum(wp_diff_bowler),
Runs=sum(TRuns)) %>% arrange(WPA) %>%
dplyr::slice(1:4)
match_over_bowlers <- wpa_df %>% distinct(Season,MatchID,InningsNo,BowlTeam,Over,Bowler)
oversbowled <- wpa_df %>% group_by(Season,MatchID,InningsNo,BowlTeam,Bowler) %>% dplyr::summarise(OversBowled = length(unique(Over)))
worst4bowlers <- worst4 %>% left_join(match_over_bowlers) %>% left_join(oversbowled)
#CSK
cskworst4 <- worst4bowlers %>% filter(Season>=2018,
BowlTeam=="Chennai Super Kings") %>% mutate(OverID=paste0(MatchID,InningsNo,Over,sep=" | ")) %>%
group_by(Season,BowlTeam,Bowler) %>% dplyr::summarise(Overs = length(unique(OverID)),
OversPC= length(unique(OverID))/sum(OversBowled),
Runs=sum(Runs),
TotalWPA = sum(WPA),
MeanWPA=mean(WPA),
SDWPA=sd(WPA))
View(cskworst4)
sum(cskworst4$Overs)
sum(cskworst4$Overs[cskworst4$Season==2019])
match_over_bowlers <- wpa_df %>% distinct(Season,MatchID,InningsNo,BowlTeam,Over,Bowler)
oversbowled <- wpa_df %>% group_by(Season,MatchID,InningsNo,BatTeam,BowlTeam,Bowler) %>% dplyr::summarise(OversBowled = length(unique(Over)))
worst4bowlers <- worst4 %>% left_join(match_over_bowlers) %>% left_join(oversbowled)
View(worst4bowlers)
oversbowled <- wpa_df %>% group_by(MatchDate,Season,MatchID,InningsNo,BatTeam,BowlTeam,Bowler) %>% dplyr::summarise(OversBowled = length(unique(Over)))
View(wpa_df)
oversbowled <- wpa_df %>% mutate(MatchDate = as.Date(substr(MatchID,1,10))) %>% group_by(MatchDate,Season,MatchID,InningsNo,BatTeam,BowlTeam,Bowler) %>% dplyr::summarise(OversBowled = length(unique(Over)))
View(oversbowled)
worst4bowlers <- worst4 %>% left_join(match_over_bowlers) %>% left_join(oversbowled)
View(worst4bowlers)
View(wpa_df)
write.csv(worst4bowlers %>% select(MatchDate,BatTeam,InningsNo,Over, Runs, WPA) %>% rename(Opponent=BatTeam),"~/Desktop/Messy Fractals/Data/Team Composition/worst4_bowlers.csv",row.names = F)
write.csv(worst4bowlers %>% ungroup() %>% select(MatchDate,BatTeam,InningsNo,Over, Runs, WPA) %>% rename(Opponent=BatTeam),"~/Desktop/Messy Fractals/Data/Team Composition/worst4_bowlers.csv",row.names = F)
write.csv(worst4bowlers %>% ungroup() %>% select(MatchDate,BowlTeam,BatTeam,InningsNo,Over, Runs, WPA) %>% rename(Opponent=BatTeam),"~/Desktop/Messy Fractals/Data/Team Composition/worst4_bowlers.csv",row.names = F)
write.csv(worst4bowlers %>% ungroup() %>% filter(Season==2019,Bowler=="DL Chahar") %>%
select(MatchDate,BatTeam,InningsNo,Over, Runs, WPA) %>% rename(Opponent=BatTeam),"~/Desktop/Messy Fractals/Data/Team Composition/worst4_bowlers.csv",row.names = F)
w <- wpa_df %>% group_by(MatchID, InningsNo, Batsman) %>% dplyr::summarise(WPA=sum(wp_diff_batsman))
ggplot(w,aes(x=WPA))+ geom_histogram(aes(y=..density..))
rm(list=ls())
library(haven)
library(dplyr)
library(ggplot2)
library(reshape2)
setwd("~/Documents/Swing Voters in the US/")
setwd("~/Documents/Trump Supporter/")
cces_ts <- read_dta(file = "./cces18_common_vv.dta")
saveRDS(cces_ts,"./cces_2018_data.RDS")
View(cces_ts)
# cces_ts <- read_dta(file = "./cces18_common_vv.dta")
# saveRDS(cces_ts,"./cces_2018_data.RDS")
cces <- cces_ts %>% select(caseid=caseid,
trumpapprove=CC18_308a,
birthyr,
gender,
sexuality,
educ,
race,
ideo5,
pew_churatd,
newsint,
union,
investor,
tvuse=CC18_300_2 ,
newspaper=CC18_300_3,
radiouse=CC18_300_4,
videoabtpolitics=CC18_300d_3,
fwdpolitics=CC18_300d_5,
alwaysallowabortion=CC18_321a,
allowemployersdenyabortion=CC18_321d,
allabortionsillegal=CC18_321f,
borderspendingpluswall=CC18_322a,
daca=CC18_322b,
legalimmigration=CC18_322c_new,
cutcorporatetax=CC18_325a,
medicareforall=CC18_327a,
repealobamacare=CC18_327c,
partialrepeallargeempl=CC18_327d,
selfideology=CC18_334A,
trumpideology=CC18_334C,
demideology=CC18_334D,
repideology=CC18_334E,
russiacollusion=CC18_335,
transban=CC18_417_d,
trumpapprovepost=CC18_app_dtrmp_post,
agreewhiteprivilege=CC18_422a,
womenunreasonablesexism=CC18_422c)
View(cces)
# cces_ts <- read_dta(file = "./cces18_common_vv.dta")
# saveRDS(cces_ts,"./cces_2018_data.RDS")
cces <- cces_ts %>% select(caseid=caseid,
trumpapprove=CC18_308a,
birthyr,
gender,
sexuality,
educ,
race,
ideo5,
pew_churatd,
newsint,
union,
investor,
tvuse=CC18_300_2 ,
newspaper=CC18_300_3,
radiouse=CC18_300_4,
videoabtpolitics=CC18_300d_3,
fwdpolitics=CC18_300d_5,
alwaysallowabortion=CC18_321a,
allowemployersdenyabortion=CC18_321d,
allabortionsillegal=CC18_321f,
borderspendingpluswall=CC18_322a,
daca=CC18_322b,
legalimmigration=CC18_322c_new,
cutcorporatetax=CC18_325a,
medicareforall=CC18_327a,
repealobamacare=CC18_327c,
partialrepeallargeempl=CC18_327d,
selfideology=CC18_334A,
trumpideology=CC18_334C,
demideology=CC18_334D,
repideology=CC18_334E,
russiacollusion=CC18_335,
transban=CC18_417_d,
trumpapprovepost=CC18_app_dtrmp_post,
agreewhiteprivilege=CC18_422a,
womenunreasonablesexism=CC18_422c) %>% filter(!is.na(trumpapprove),!is.na(trumpapprovepost))
View(cces)
cces <- cces %>% filter(trumpapprove %in% c(1,2) | trumpapprovepost %in% c(1,2))
View(cces)
colSums(is.na(cces))
# videoabtpolitics=CC18_300d_3,
# fwdpolitics=CC18_300d_5,
# cces_ts <- read_dta(file = "./cces18_common_vv.dta")
# saveRDS(cces_ts,"./cces_2018_data.RDS")
cces <- cces_ts %>% select(caseid=caseid,
trumpapprove=CC18_308a,
birthyr,
gender,
sexuality,
educ,
race,
ideo5,
pew_churatd,
newsint,
union,
investor,
tvuse=CC18_300_2 ,
newspaper=CC18_300_3,
radiouse=CC18_300_4,
# videoabtpolitics=CC18_300d_3,
# fwdpolitics=CC18_300d_5,
alwaysallowabortion=CC18_321a,
allowemployersdenyabortion=CC18_321d,
allabortionsillegal=CC18_321f,
borderspendingpluswall=CC18_322a,
daca=CC18_322b,
legalimmigration=CC18_322c_new,
cutcorporatetax=CC18_325a,
medicareforall=CC18_327a,
repealobamacare=CC18_327c,
partialrepeallargeempl=CC18_327d,
selfideology=CC18_334A,
trumpideology=CC18_334C,
demideology=CC18_334D,
repideology=CC18_334E,
russiacollusion=CC18_335,
transban=CC18_417_d,
trumpapprovepost=CC18_app_dtrmp_post,
agreewhiteprivilege=CC18_422a,
womenunreasonablesexism=CC18_422c) %>% filter(!is.na(trumpapprove),!is.na(trumpapprovepost))
cces <- cces %>% filter(trumpapprove %in% c(1,2) | trumpapprovepost %in% c(1,2))
colSums(is.na(cces))
